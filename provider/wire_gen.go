// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package provider

import (
	"github.com/Boyuan-IT-Club/Meowpick-Backend/application/service"
	"github.com/Boyuan-IT-Club/Meowpick-Backend/infra/config"
	"github.com/Boyuan-IT-Club/Meowpick-Backend/infra/consts/consts"
	"github.com/Boyuan-IT-Club/Meowpick-Backend/infra/mapper/comment"
	"github.com/Boyuan-IT-Club/Meowpick-Backend/infra/mapper/course"
	"github.com/Boyuan-IT-Club/Meowpick-Backend/infra/mapper/like"
	"github.com/Boyuan-IT-Club/Meowpick-Backend/infra/mapper/searchhistory"
	"github.com/Boyuan-IT-Club/Meowpick-Backend/infra/mapper/teacher"
	"github.com/Boyuan-IT-Club/Meowpick-Backend/infra/mapper/user"
)

// Injectors from wire.go:

func NewProvider() (*Provider, error) {
	configConfig, err := config.NewConfig()
	if err != nil {
		return nil, err
	}
	mongoMapper := comment.NewMongoMapper(configConfig)
	likeMongoMapper := like.NewMongoMapper(configConfig)
	commentService := service.CommentService{
		CommentMapper: mongoMapper,
		LikeMapper:    likeMongoMapper,
	}
	searchhistoryMongoMapper := searchhistory.NewMongoMapper(configConfig)
	searchHistoryService := service.SearchHistoryService{
		SearchHistoryMapper: searchhistoryMongoMapper,
	}
	userMongoMapper := user.NewMongoMapper(configConfig)
	authService := service.AuthService{
		UserMapper: userMongoMapper,
	}
	likeService := service.LikeService{
		LikeMapper: likeMongoMapper,
	}
	courseMongoMapper := course.NewMongoMapper(configConfig)
	staticData, err := consts.NewStaticData()
	if err != nil {
		return nil, err
	}
	courseService := service.CourseService{
		CourseMapper: courseMongoMapper,
		StaticData:   staticData,
	}
	teacherService := service.TeacherService{
		CourseMapper: courseMongoMapper,
		StaticData:   staticData,
	}
	teacherMongoMapper := teacher.NewMongoMapper(configConfig)
	searchService := service.SearchService{
		CourseMapper:  courseMongoMapper,
		TeacherMapper: teacherMongoMapper,
	}
	providerProvider := &Provider{
		Config:               configConfig,
		CommentService:       commentService,
		SearchHistoryService: searchHistoryService,
		AuthService:          authService,
		LikeService:          likeService,
		CourseService:        courseService,
		TeacherService:       teacherService,
		SearchService:        searchService,
	}
	return providerProvider, nil
}
